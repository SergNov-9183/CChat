# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "actions" ]
  pull_request:
    branches: [ "main", "development" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_matrix:
    strategy: 
      matrix:
        os: [ubuntu-20.04]
        
    runs-on: ${{ matrix.os }}
    
    
    env:
      app_name: app_${{ matrix.os }}_${{ github.run_number }}
      bin_path: ${GITHUB_WORKSPACE}/bin

    steps:
      - uses: actions/checkout@v3
      - run: echo ${{ env.bin_path }}
      
      - name: MKDIR
        run: mkdir ${{ env.bin_path }}
      
      - name: Show folder
        run: ls
        
      - name: Update apt-get
        run: sudo apt-get update -qq
        
      - name: Install QT
        run: sudo apt-get -y install qt5-default qt5-image-formats-plugins
      
      - name: Show server
        working-directory: ./server
        run: ls
      - name: Show above server
        run: ls
      - name: Run qmake build
        working-directory: ./server
        run: qmake -makefile "DESTDIR= ${{ env.bin_path }}"         # ${{ env.bin_path }}/server/bin"
      - name: Run make
        working-directory: ./server
        run: make
      - name: Show server
        working-directory: ./server
        run: ls
      - name: Show above server
        run: ls

      - name: Show . bin
        working-directory: ./bin
        run: ls
      

      - name: Show client
        working-directory: ./client
        run: ls
      - name: Run qmake build
        working-directory: ./client
        run: qmake -makefile "DESTDIR= ${{ env.bin_path }}"
      - name: Run make
        working-directory: ./client
        run: make
      - name: Show client
        working-directory: ./client
        run: ls

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        with: 
          name: Chat-artifacts
          path: | 
            ${{ env.bin_path }}/server
            ${{ env.bin_path }}/client
          retention-days: 5 
          
      - name: Telegram Notify
        if: ${{ always() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            An event (${{ github.event_name }}) occured in ${{ github.repository }} repository.
          document: ${{ env.bin_path }}/server 
 
          
